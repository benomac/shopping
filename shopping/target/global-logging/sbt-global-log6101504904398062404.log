[0m[[0m[0mdebug[0m] [0m[0m> Exec(~test, Some(b62c4b16-19e6-4ab6-bb8d-64f2cd33d586), Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(__runWatch console0, None, Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(sbtStashOnFailure, None, Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(__preWatch console0, None, Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(test, None, Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0mEvaluating tasks: Test / test[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 1 Scala source to /Users/benomac/code/scala/shopping/shopping/target/scala-2.13/test-classes ...[0m
[0m[[0m[0minfo[0m] [0m[0m[32mShoppingSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mpriceForDeals[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return the cost for items that made the deal quantity[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mpriceForNoDeals[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return the cost of remainder items that didn't make the deal quantity[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mpriceWhenItemHasNoDealValues[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return the price for a number of items that have no deal values[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mremoveInvalidItems[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return a string only of item in the costs map[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should not blow up if an item is invalid[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mcreateToBuyMap[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return a map of key: items, value: number of itmes[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mtotal[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return the total cost of the items 'aacba'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mupdatePriceMap[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return an updated  map of costs[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mRun completed in 323 milliseconds.[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTotal number of tests run: 8[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mSuites: completed 1, aborted 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTests: succeeded 8, failed 0, canceled 0, ignored 0, pending 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mAll tests passed.[0m[0m
[0m[[0m[32msuccess[0m] [0m[0mTotal time: 4 s, completed 29 Mar 2021, 20:59:18[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(resumeFromFailure, None, Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(sbtPopOnFailure, None, Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(__postWatch console0, None, Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(__waitWatch console0, None, Some(CommandSource(console0)))[0m
